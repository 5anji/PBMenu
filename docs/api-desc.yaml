openapi: 3.0.3
info:
  title: API for Tablo website
  contact:
    email: gitlanm@gmail.com
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
externalDocs:
  description: See our source code
  url: https://github.com/5anji/PBMenu
tags:
  - name: Restaurant
    description: Operations about restaurants
paths:
  /get-all-restaurants:
    get:
      tags:
        - Restaurant
      summary: Show all restaurants
      requestBody:
        description: Restaurant schema as input
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNumberOfPage"

      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Restaurant"
        "400":
          description: Invalid status value
  /save-restaurant:
    post:
      tags:
        - Restaurant
      summary: Add retaurant to remote DB
      requestBody:
        description: Pagination control in site
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restaurant"
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid status value
  /get-restaurant-by-id:
    get:
      tags:
        - Restaurant
      summary: Find restaurant by ID
      description: Returns a single restaurant
      operationId: getRestaurantById
      parameters:
        - name: restaurantId
          in: path
          description: ID of restaurant to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantsGetResponseDto"
        "400":
          description: Invalid ID supplied
        "404":
          description: Restaurant not found
  /delete-restaurant:
    delete:
      tags:
        - Restaurant
      summary: Delete restaurant by ID
      description: Returns a single restaurant
      parameters:
        - name: restaurantId
          in: path
          description: ID of restaurant to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Restaurant not found
  /detach-restaurant:
    put:
      tags:
        - Restaurant
      summary: Update restaurant status
      description: Returns a single restaurant
      parameters:
        - name: restaurantId
          in: path
          description: ID of restaurant to update
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Restaurant not found
components:
  schemas:
    Restaurant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: e762634c-3e41-11eb-b897-0862660ccbd4
        photoUrl:
          type: string
          description: url of the image that will be placed as rest. preview
        name:
          type: string
          description: title under photo
        restaurantStatus:
          type: string
          enum:
            - AVAILABLE
            - DETACHED
          description: Current restaurant status
    RestaurantsGetResponseDto:
      type: object
      properties:
        restaurantId:
          type: string
          format: uuid
          example: e762634c-3e41-11eb-b897-0862660ccbd4
        restaurantName:
          type: string
          format: any
          description: title below photo
          example: "StarBucks"
        restaurantPhoto:
          type: string
          description: larger restaurant preview photo/logo
        restaurantStatus:
          type: string
          enum:
            - AVAILABLE
            - DETACHED
          description: Current restaurant status
        # phone_numbers:
        #   type: array
        #   description: phone numbers to contact with
        #   items:
        #     type: string
        #     format: phone_number
        #   example: ["+373 79123456", "+373 79000000"]
        # addresses:
        #   type: array
        #   description: restaurant available adresses
        #   items:
        #     type: string
        #     format: street_address
        #   example: ["St. cel Mare str. 1/1", "Ceucari str. 66/6"]
        # description:
        #   type: string
        #   format: any
        #   description: Small descrition of the restaurant
        #   example: Lorem ipsum vuisum mapsum libi
        # food:
        #   $ref: "#/components/schemas/Food"
        # drinks:
        #   $ref: "#/components/schemas/Drinks"
        # entertaiment:
        #   $ref: "#/components/schemas/Entertaiment"
    Food:
      type: object
      properties:
        foodId:
          type: string
          format: uuid
          example: e762634c-3e41-11eb-b897-0862660ccbd4
        foodName:
          type: string
          example: some_food
        foodPhoto:
          type: string
        foodIngredients:
          type: string
        restaurantDbo:
          $ref: "#/components/schemas/Restaurant"
        foodStatus:
          type: string
          enum:
            - AVAILABLE
            - DETACHED
        foodPrice:
          type: number
          format: float
          example: 66.6
        isDeliverable:
          type: boolean
        isSpicy:
          type: boolean
        isVegetarian:
          type: boolean
    Drinks:
      type: object
      properties:
        drinkId:
          type: string
          format: uuid
          example: e762634c-3e41-11eb-b897-0862660ccbd4
        drinkName:
          type: string
          example: some_food

        drinkPrice:
          type: number
          format: float
          example: 66.6
        isDeliverable:
          type: boolean
        isAlcoholic:
          type: boolean
        restaurantDbo:
          $ref: "#/components/schemas/Restaurant"
    Entertaiment:
      type: object
      properties:
        Entertaiment:
          type: boolean
          enum:        
            - Hookah
            - Playground
            - Kid Activities
    GetNumberOfPage:
      type: object
      properties:
        pages:
          type: integer
        nrOfItems:
          type: integer
    SubsidiariesDbo:
      type: object
      properties:
        subsidiaryId:
          type: string
          format: uuid
          example: e762634c-3e41-11eb-b897-0862660ccbd4
        subsidiaryName:
          type: string
          example: subsidiary name
        address:
          type: string
        subsidiaryPhoto:
          type: string
        schedule:
          type: string
        entertainments:
          type: array
          description: list of available entertaiments
          items:
            $ref: "#/components/schemas/Entertaiment"

